[tool.poetry]
name = "flint"
version = "0.2.9"
description = "Pipeline for RACS processing, and profit along the way"
authors = ["tgalvin <tim.galvin@csiro.au>"]
license = "MIT"
readme = "README.md"
include = [
    {path = 'flint/data/model/1934-638.calibrate.txt'},
    {path = 'flint/data/source_counts/de_zotti_1p4.txt'},
    {path = 'flint/data/source_counts/SKADS_1p4GHz.fits'},
    {path = 'flint/data/aoflagger/ATCA.lua'},
    {path = 'flint/data/aoflagger/ASKAP.lua'},
    {path = 'flint/data/tests'},
    {path = 'flint/data/peel/known_sources.csv'}
]

[tool.poetry.dependencies]
python = "^3.11"
astropy = "6.1.3" # fixing until units change in 6.1.4 addressed in radio-beam
numpy = "^1.26.0"
python-casacore = "3.5.2" # newer version caused MS errors (maybe related to pre-built wheel)
pydantic = "2.8.2" # version 2.9.0 caused prefect model validation error
scipy = "*"
spython = "^0.3.1"
fixms = ">=0.2.6"
matplotlib = "*"
prefect = "^2.10.0"
prefect-dask = "^0.2.4"
dask-jobqueue = "*"
RACS-tools = { git = "https://github.com/AlecThomson/RACS-tools.git@8e5d919e9938eda19fc7b8a915f855e8b8e0e514" } # allows array of beam shapes in beamcon_3D
aegeantools = "2.3.0"
radio-beam = "^0.3.4"
reproject = "*"
scikit-image = "*"
pandas = "*"
ConfigArgParse = "^1.7"
fitscube = "^0.5.0"
astroquery = "^0.4.7"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
mypy = "^1.4.1"
isort = "^5.12.0"
pre-commit = "*"
ruff = "^0.1.12"
pytest = "^7.4.0"
pytest-cov = "*"
sphinx = "*"

[tool.poetry.extras]
dev = [
    "black",
    "mypy",
    "isort",
    "pre-commit",
    "ruff",
    "pytest",
    "pytest-cov",
    "sphinx",
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
flint_skymodel = "flint.sky_model:cli"
flint_aocalibrate = "flint.calibrate.aocalibrate:cli"
flint_archive = "flint.archive:cli"
flint_flagger = "flint.flagging:cli"
flint_bandpass = "flint.bandpass:cli"
flint_catalogues = "flint.catalogue:cli"
flint_ms = "flint.ms:cli"
flint_wsclean = "flint.imager.wsclean:cli"
flint_gaincal = "flint.selfcal.casa:cli"
flint_convol = "flint.convol:cli"
flint_yandalinmos = "flint.coadd.linmos:cli"
flint_config = "flint.configuration:cli"
flint_aegean = "flint.source_finding.aegean:cli"
flint_validation_plot = "flint.validation:cli"
flint_masking = "flint.masking:cli"
flint_potato = "flint.peel.potato:cli"
flint_leakage = "flint.leakage:cli"
flint_flow_bandpass_calibrate = "flint.prefect.flows.bandpass_pipeline:cli"
flint_flow_continuum_pipeline = "flint.prefect.flows.continuum_pipeline:cli"
flint_flow_subtract_cube_pipeline = "flint.prefect.flows.subtract_cube_pipeline:cli"

[[tool.mypy.overrides]]
module = "astropy.*"
ignore_missing_imports = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []
# Full list of rules from scientific-python-cookiecutter.
# More can be enabled as needed / wanted.
extend-select = [
    # "B",        # flake8-bugbear
    "I",        # isort
    # "ARG",      # flake8-unused-arguments
    # "C4",       # flake8-comprehensions
    # "EM",       # flake8-errmsg
    # "ICN",      # flake8-import-conventions
    # "G",        # flake8-logging-format
    # "PGH",      # pygrep-hooks
    # "PIE",      # flake8-pie
    # "PL",       # pylint
    # "PT",       # flake8-pytest-style
    # "PTH",      # flake8-use-pathlib
    # "RET",      # flake8-return
    # "RUF",      # Ruff-specific
    # "SIM",      # flake8-simplify
    # "T20",      # flake8-print
    "UP",       # pyupgrade
    # "YTT",      # flake8-2020
    # "EXE",      # flake8-executable
    "NPY",      # NumPy specific rules
    "PD",       # pandas-vet
]
isort.required-imports = ["from __future__ import annotations"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.typos.files]
extend-exclude = ["*.fits", "flint/data/**/*", "ignore_words.txt"]

[tool.typos.default.extend-identifiers]
FIELDs = "FIELDs"
FoV = "FoV"
outweight= "outweight"
